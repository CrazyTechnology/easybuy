<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.com.ming.mapper.TbAuthMapper">
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache">
        <property name="timeToIdleSeconds" value="3600"/>
        <property name="timeToLiveSeconds" value="3600"/>
        <property name="maxEntriesLocalHeap" value="1000"/>
        <property name="maxEntriesLocalDisk" value="10000000"/>
        <property name="memoryStoreEvictionPolicy" value="LRU"/>
    </cache>
    <resultMap id="BaseResultMap" type="com.com.ming.pojo.TbAuth">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="permission" property="permission" jdbcType="VARCHAR"/>
        <result column="level" property="level" jdbcType="INTEGER"/>
        <result column="role_id" property="roleId" jdbcType="INTEGER"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="openway" property="openway" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
            </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
            </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, name, permission, level, role_id, description, type, url, openway,parent_id
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from tb_auth
        <where>
            <if test="parentId!=null and parentId!=''">
                and parent_id=#{parentId}
            </if>
        </where>

    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from tb_auth
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_auth
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.com.ming.pojo.TbAuthExample">
        delete from tb_auth
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.com.ming.pojo.TbAuth">
    insert into tb_auth (id, name, permission, 
      level, role_id, description, 
      type, url, openway)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{permission,jdbcType=VARCHAR}, 
      #{level,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{openway,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.com.ming.pojo.TbAuth">
        insert into tb_auth
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="permission != null">
                permission,
            </if>
            <if test="level != null">
                level,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="openway != null">
                openway,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="permission != null">
                #{permission,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                #{level,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="openway != null">
                #{openway,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                #{parentId}
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.com.ming.pojo.TbAuthExample" resultType="java.lang.Integer">
        select count(*) from tb_auth
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tb_auth
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.permission != null">
        permission = #{record.permission,jdbcType=VARCHAR},
            </if>
            <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
            </if>
            <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
            </if>
            <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
            </if>
            <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
            </if>
            <if test="record.openway != null">
                openway = #{record.openway,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tb_auth
        set id = #{record.id,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        permission = #{record.permission,jdbcType=VARCHAR},
        level = #{record.level,jdbcType=INTEGER},
        role_id = #{record.roleId,jdbcType=INTEGER},
        description = #{record.description,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=INTEGER},
        url = #{record.url,jdbcType=VARCHAR},
        openway = #{record.openway,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.com.ming.pojo.TbAuth">
        update tb_auth
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="permission != null">
                permission = #{permission,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="openway != null">
                openway = #{openway,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.com.ming.pojo.TbAuth">
    update tb_auth
    set name = #{name,jdbcType=VARCHAR},
      permission = #{permission,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      openway = #{openway,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


    <!--根据parentId查询菜单-->
    <select id="selectByParentId" parameterType="integer" resultType="com.com.ming.pojo.TbAuth" useCache="false">
        SELECT
        <include refid="Base_Column_List"/>
        from tb_auth
        <where>
            <if test="type != null and type!=''">
                and type='${type}'
            </if>
            <if test="parentId != null ">
                and parent_id='${parentId}'
            </if>
        </where>

    </select>


    <!--根据用户名权限，查询菜单-->
    <select id="findMenuJson" resultType="com.com.ming.pojo.TbAuth">
        SELECT
        <include refid="Base_Column_List"/>
        from tb_auth
        where FIND_IN_SET(id,(
        SELECT GROUP_CONCAT(auth_id)
        from tb_role_auth where role_id=
        (SELECT role_id from tb_dept_user where login_name=#{loginName}) GROUP BY role_id))
        <if test="type!=null">
            and type=#{type}
        </if>
        <if test="parentId!=null">
            and parent_id=#{parentId}
        </if>

    </select>


</mapper>